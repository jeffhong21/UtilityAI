<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApexAIEditor</name>
    </assembly>
    <members>
        <member name="T:Apex.AI.Editor.IView">
            <summary>
            Marker interface for AI views
            </summary>
        </member>
        <member name="T:Apex.AI.Editor.AIVersion">
            <summary>
            Stores the version in a single int. Obviously this puts some restrictions on the version, each of major, minor etc. can be a max of 255.
            </summary>
        </member>
        <member name="T:Apex.AI.Editor.IXmlRepairTask">
            <summary>
            Interface that represents a custom repair task for the AI XML
            </summary>
        </member>
        <member name="M:Apex.AI.Editor.IXmlRepairTask.Repair(System.Xml.Linq.XDocument,System.Xml.Linq.XDocument)">
            <summary>
            Repairs the specified AI configuration.
            </summary>
            <param name="aiConfig">The configuration for the actual AI.</param>
            <param name="aiEditorConfig">The editor configuration for the AI.</param>
        </member>
        <member name="P:Apex.AI.Editor.IXmlRepairTask.versionThreshold">
            <summary>
            Gets the version threshold, meaning the last version of an AI this should be applied to.
            The version refers to the Apex AI version the AI was last saved with.
            </summary>
        </member>
        <member name="P:Apex.AI.Editor.IXmlRepairTask.repairsEditorConfiguration">
            <summary>
            Gets a value indicating whether this repairer also repair editor configurations. If <c>false</c> <see cref="M:Apex.AI.Editor.IXmlRepairTask.Repair(System.Xml.Linq.XDocument,System.Xml.Linq.XDocument)"/> will have null passed to its second argument.
            </summary>
        </member>
    </members>
</doc>
